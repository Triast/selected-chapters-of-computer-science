// <auto-generated />
using StateCache.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace StateCache.Migrations
{
    [DbContext(typeof(CarServiceContext))]
    [Migration("20180228103031_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarServiceSite.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BodyNumber");

                    b.Property<string>("EngineNumber");

                    b.Property<double>("EngineVolume");

                    b.Property<string>("Mark");

                    b.Property<string>("OwnerName");

                    b.Property<int>("ReleaseYear");

                    b.Property<string>("StateNumber");

                    b.Property<string>("TechnicalPassport");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarServiceSite.Models.CarTechState", b =>
                {
                    b.Property<int>("CarTechStateId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalEquipment");

                    b.Property<string>("BrakeSystem");

                    b.Property<int>("CarId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("InspectorId");

                    b.Property<string>("Lightning");

                    b.Property<bool>("MarkOnPassageOfServiceStation");

                    b.Property<double>("Mileage");

                    b.Property<string>("Suspension");

                    b.Property<string>("Wheels");

                    b.HasKey("CarTechStateId");

                    b.HasIndex("CarId");

                    b.HasIndex("InspectorId");

                    b.ToTable("CarTechStates");
                });

            modelBuilder.Entity("CarServiceSite.Models.Inspector", b =>
                {
                    b.Property<int>("InspectorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FullName");

                    b.Property<string>("Subdivision");

                    b.HasKey("InspectorId");

                    b.ToTable("Inspectors");
                });

            modelBuilder.Entity("CarServiceSite.Models.CarTechState", b =>
                {
                    b.HasOne("CarServiceSite.Models.Car", "Car")
                        .WithMany("CarTechState")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CarServiceSite.Models.Inspector", "Inspector")
                        .WithMany("CarTechStates")
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
