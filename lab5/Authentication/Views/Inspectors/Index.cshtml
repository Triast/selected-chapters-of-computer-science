@model IEnumerable<Inspector>

@addTagHelper *, Authentication

@{
    ViewData["Title"] = "Index";

    var subdivisions = (List<SelectListItem>)ViewData["Subdivisions"];
    var fullName = ViewContext.HttpContext.Items["FullName"] ?? "";

    var pageModel = (PageViewModel)ViewData["PageViewModel"];
}

<h2>Index</h2>

<form asp-controller="Inspectors" asp-action="Index" method="post">
    <div class="form-inline form-group">
        <label for="FullName">ФИО инспектора:</label>
        <input type="text" name="FullName" value="@fullName" class="form-control" />
        <label for="Subdivision">Подразделение:</label>
        <select name="Subdivision" asp-items="subdivisions" class="form-control"></select>
        <input type="submit" value="Фильтр" class="btn btn-default" />
    </div>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-controller="Inspectors" asp-action="Index" asp-route-sortOrder="@ViewData["FullName"]">
                    @Html.DisplayNameFor(model => model.FullName)
                </a>
            </th>
            <th>
                <a asp-controller="Inspectors" asp-action="Index" asp-route-sortOrder="@ViewData["Subdivision"]">
                    @Html.DisplayNameFor(model => model.Subdivision)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subdivision)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.InspectorId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.InspectorId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.InspectorId })
                </td>
            </tr>
        }
    </tbody>
</table>

@if (pageModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(pageModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}

@if (pageModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(pageModel.PageNumber + 1)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}

<pagination page-controller="Inspectors" page-model="pageModel"></pagination>